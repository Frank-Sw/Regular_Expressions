- Class: meta
  Course: Regular_Expressions
  Lesson: Character_Classes
  Author: Jon Calder
  Type: Standard
  Organization: N/A
  Version: 2.4.2

- Class: text
  Output: In this lesson, we will look at the use of character classes in regular expressions. These are convenient character categories 
    which allow one to easily match words, spaces, digits etc.
    
- Class: text
  Output: There are actually two flavors of character classes. One uses '[:' and ':]' around a predefined name inside square brackets and 
    the other uses '\' along with a special character. In many cases these are interchangeable as we'll soon see.
  
- Class: cmd_question
  Output: You can indicate a digit character with '[:digit:]' (or alternatively with '\d'). We have created a vector of alphanumeric 
    characters in the 'passwords' object. Use grepl to check which of these passwords end with a digit.
  CorrectAnswer: grepl(pattern = '[:digit:]$', x = passwords)
  AnswerTests: omnitest(correctExpr="grepl(pattern = '[:digit:]$', x = passwords)") # include '\d' answer variant?
  Hint: Simply use grepl with a pattern that combines '$' and '[:digit:]'

# Escaped character classes not working in swirl?
#- Class: cmd_question
#  Output: You can indicate a non-digit character with '\D'. Use grepl to check which of these passwords start with a non-digit character.
#  CorrectAnswer: grepl(pattern = '^\\D', x = passwords)
#  AnswerTests: omnitest(correctExpr="grepl(pattern = '^\\D', x = passwords)")
#  Hint: Simply use grepl with a pattern which combines the 'starts with' anchor ('^') with '\\D'
  
- Class: cmd_question
  Output: You can match any lower-case letter character with '[:lower:]'. Use grepl to check which of the passwords begin with a 
    lower-case character.
  CorrectAnswer: grepl(pattern = '^[:lower:]', x = passwords)
  AnswerTests: omnitest(correctExpr="grepl(pattern = '[:lower:]', x = passwords)")
  Hint: Simply combine '^' and '[:lower:]' in the regex pattern.
  
- Class: cmd_question
  Output: You can match any upper-case letter character with '[:upper:]'. Use grepl to check which of the passwords end with an 
    upper-case character.
  CorrectAnswer: grepl(pattern = '[:upper:]$', x = passwords)
  AnswerTests: omnitest(correctExpr="grepl(pattern = '[:upper:]$', x = passwords)")
  Hint: Simply combine '$' and '[:upper:]' in the regex pattern.

- Class: text
  Output: The pattern '[a-z]' is equivalent to '[:lower:]' i.e. it will match any lower case letter character. Similarly, '[A-Z]'
    is equivalent to '[:upper:]' and will match any upper case letter character.
  
- Class: text
  Output: The pattern '[:alpha:]' will match any alphabetic characters (lower or upper-case), and is thus equivalent to '[[:lower:][:upper:]]' 
    or '[A-z]'.
  
- Class: text
  Output: In the next lesson, we'll explore the use of quantifiers in regular expressions. Quantifiers specify how many repetitions of 
    a pattern should be matched.
